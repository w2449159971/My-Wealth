---->折半查找
2^n>=i；
找的时候最多找n次

---->折半查找的实例
写代码可以在整型有序数组中查找想要的数字， 
找到了返回下标，找不到返回-1. 
#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>

#include <stdlib.h>

int binary_search(int arr[],int i,int sz)
{
	int left=0;
	int right=sz-1;
	while (left <= right)
	{
		int mid = left + (right - left) / 2;//用（left+right）/2会溢出
		if (arr[mid] < i)
		{
			left = mid + 1;
		}
		 else if (arr[mid]>i)
		{
			right = mid - 1;
		}
		 else
		 {
			 return mid;
		 }
	}
	return -1;
}
int main()
{
	int arr[] = { 1, 2, 3, 4, 5, 6, 7, 8 ,9,10,11,12,13,14};
	int sz = sizeof(arr) / sizeof(arr[0]);
	int i;
	scanf("%d", &i);
	int ret = binary_search(arr, i, sz);
	if (-1 == ret)
    {
	   printf("找不到\n");
	}

	else
	{
		printf("找到了，下标是：%d\n", ret);
	}
	system("pause");
	return 0;
}
